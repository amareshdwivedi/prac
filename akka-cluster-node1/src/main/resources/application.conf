akka {
  systemName = "ClusterSystem"
  #"akka.contrib.pattern.DistributedPubSubExtension",
  extensions = ["akka.contrib.pattern.ClusterReceptionistExtension"]
  #extensions = ["akka.contrib.pattern.DistributedPubSubExtension"]
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
     serializers {    
	  java = "akka.serialization.JavaSerializer"
	  kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
	               
	}
    
    serialization-bindings {
        
        "threetier.demo.bean.Employee"=kryo
    }
        kryo  {  
			type = "graph"  
            idstrategy = "explicit"  
            serializer-pool-size = 60
            buffer-size = 4096  
            use-manifests = false
            implicit-registration-logging = true 
            kryo-trace = false 
            mappings {
            "threetier.demo.bean.Employee"=20
            
    		}
  }
  }
  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      port = 2551
    }
  }

  cluster {
    seed-nodes = [
			      "akka.tcp://ClusterSystem@127.0.0.1:2551"
				 ]

    auto-down-unreachable-after = 10s
  }
}
akka.contrib.cluster.receptionist {
  # Actor name of the ClusterReceptionist actor, /user/receptionist
  name = receptionist
 
  # Start the receptionist on members tagged with this role.
  # All members are used if undefined or empty.
  role = ""
 
  # The receptionist will send this number of contact points to the client
  number-of-contacts = 3
 
  # The actor that tunnel response messages to the client will be stopped
  # after this time of inactivity.
  response-tunnel-receive-timeout = 30s
}
